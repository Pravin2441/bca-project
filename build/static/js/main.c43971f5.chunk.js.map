{"version":3,"sources":["firebase.js","components/SidePanel/UserPanel.js","hooks/isMount.js","store/channels/actions.js","store/channels/actionTypes.js","components/SidePanel/Starred.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/index.js","components/Messages/MessagesHeader.js","components/Messages/UploadFileModal.js","components/Messages/ProgressBar.js","components/Messages/MessagesForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/index.js","components/MetaPanel/index.js","Themes/GlobalStyles.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","components/Spinner.js","components/VideoChat.js","store/auth/reducers.js","store/channels/reducers.js","store/roorReducer.js","store/auth/actionTypes.js","store/index.js","components/Auth/ForgetPassword.js","index.js","store/auth/actions.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UserPanel","avatarEditor","currentUser","useState","user","modal","setModal","preview","setPreview","croppedImage","setCroppedImage","blob","setBlob","uploadedCroppedImage","setUploadedCroppedImage","uploadingImage","setUploadingImage","storage","ref","storageRef","auth","authUser","database","userRef","metaData","contentType","signOutUser","a","signOut","useEffect","changeAvatar","imageUrl","updateProfile","photoURL","child","uid","update","photoUrl","console","error","Grid","Column","Row","style","padding","margin","Header","inverted","as","Image","width","height","avatar","src","Dropdown","trigger","fontSize","className","displayName","options","key","text","disabled","onClick","size","icon","placeholder","Modal","basic","open","Content","Input","fluid","type","label","onChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","centered","stackable","columns","node","image","scale","Actions","Button","color","put","then","snap","getDownloadURL","downloadedUrl","Icon","name","getImageScaledToCanvas","toBlob","URL","createObjectURL","useIsMount","isMountRef","useRef","current","setChannel","channel","payload","setPrivateChannel","isChannelPrivate","Starred","starredChannels","setStarredChannels","dispatch","useDispatch","isMount","on","starredChannel","id","val","off","unStarredChannel","filteredChannels","filter","sc","channels","channelClickHandler","setChannelAction","paddingBottom","length","map","Menu","Item","opacity","Channels","state","activeChannel","props","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","push","setState","setFirstChannel","addNotificationListener","channelId","handleNotifications","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","closeModal","log","catch","err","handleSubmit","preventDefault","isFormValid","handleChange","value","changeChannel","remove","clearNotifications","updatedNotifications","getNotificationCount","forEach","displayChannels","active","Label","openModal","this","Fragment","marginLeft","cursor","onClose","Form","onSubmit","Field","React","Component","connect","memo","users","setUsers","connectedRef","presenceRef","currentUserId","set","onDisconnect","setUserStatues","userId","connected","prevUsers","isUserOnline","status","getChannelId","channelData","SidePanel","fixed","vertical","MessagesHeader","searchTerm","handleSearchMessages","searching","handleStarChannel","isStarred","darkMode","useDarkMode","to","marginTop","toggle","loading","aria-hidden","viewBox","fill","d","x","y","UploadFileModal","uploadFile","setFile","isFileAuthorized","fileName","includes","mime","lookup","clearFile","ProgressBar","uploadPercent","uploadState","Progress","percent","progress","indicating","MessagesForm","currentChannel","message","setMessage","setStatus","setErrors","uploadTask","setUploadTask","percentUpload","setPercentUpload","setUploadState","pathToUpload","setPathToUpload","emojiPicker","setEmojiPicker","showGifs","setShowGifs","setGifsrc","messageInputRef","percentage","Math","round","bytesTransferred","totalBytes","errors","snapshot","sendFileMessage","cancel","downloadedFileUrl","filePath","createMessage","messageBody","timestamp","ServerValue","TIMESTAMP","sendMessage","colonToUnicode","replace","emoji","emojiIndex","emojis","unicode","native","toLowerCase","process","onSelect","gif","newMessage","images","downsized_medium","url","Blob","fileReference","setTimeout","focus","title","colons","IconButton","aria-label","autoFocus","onKeyPress","charCode","content","uuid","isOwnUser","Message","Avatar","moment","fromNow","hasOwnProperty","isImage","Typing","Skeleton","Messages","messages","setMessages","messagesLoading","setMessagesLoading","setSearchTerm","searchingMessages","setSearchingMessages","searchResults","setSearchResults","typingUsers","setTypingUsers","setIsStarred","privateMessagesRef","listeners","setListeners","useSelector","private","messagesEndRef","addUserStarListener","removeAllListeners","getAllMessagesListener","typingListener","addToListeners","listener","newListener","prevListeners","getMessagesRef","once","data","prevStarred","Object","keys","description","allTypingUsers","concat","tu","regex","RegExp","results","reduce","acc","match","renderMessages","userPosts","setUserPosts","countUserPosts","scrollIntoView","behavior","getChannelName","numUniqueUsers","areUserPlurals","getUniqueUsers","Comment","Group","Array","_","i","display","alignItems","marginBottom","MetaPanel","isPrivateChannel","getPostText","List","entries","sort","b","ListItem","alt","lightTheme","sidebar","scrollbarPath","channelList","topSearchBar","icons","icons_hover","messageSearchbar","chatHover","chatBackground","darkTheme","GlobalStyles","createGlobalStyle","theme","App","isMounted","setIsMounted","Login","initialState","email","password","history","useHistory","loginUserState","setRegisterUserState","formIsValid","signInWithEmailAndPassword","handleInputError","inputName","some","TransitionGroup","CSSTransition","timeout","classNames","Register","userName","confirmPassword","registerUserState","successMessage","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","pc","localStream","remoteStream","initialUserState","isLoading","combineReducers","createStore","reducer","composeWithDevTools","firestore","servers","iceServers","urls","iceCandidatePoolSize","VideoChat","localVideoRef","createRef","remoteVideoRef","webcamButtonDisabled","setWebcamButtonDisabled","callButtonDisabled","setCallButtonDisabled","answerButtonDisabled","setAnswerButonDisabled","hangUpButtonDisabled","setHangUpButtonDisabled","callID","setCallID","webcamSetup","RTCPeerConnection","navigator","mediaDevices","getUserMedia","video","audio","MediaStream","getTracks","track","addTrack","ontrack","streams","srcObject","muted","createCall","callDoc","collection","doc","offerCandidates","answerCandidates","onicecandidate","candidate","add","toJSON","createOffer","offerDescription","setLocalDescription","offer","sdp","onSnapshot","currentRemoteDescription","answer","answerDescription","RTCSessionDescription","setRemoteDescription","docChanges","change","RTCIceCandidate","addIceCandidate","answerCall","get","exists","alert","callData","createAnswer","mic_switch","video_switch","autoPlay","playsInline","getAudioTracks","enabled","t","kind","getVideoTracks","clipboard","writeText","textToCopy","e","stop","close","ForgetPassword","setSuccessMessage","sendPasswordResetEmail","RootWithRouter","withRouter","onAuthStateChanged","setUser","exact","path","component","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c43971f5.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAdJKzmzN472Ux0tDwRw1as7sQGIArUkm4\",\n  authDomain: \"messenger-9b12b.firebaseapp.com\",\n  databaseURL: \"https://messenger-9b12b-default-rtdb.firebaseio.com\",\n  projectId: \"messenger-9b12b\",\n  storageBucket: \"messenger-9b12b.appspot.com\",\n  messagingSenderId: \"870427118899\",\n  appId: \"1:870427118899:web:2f6ec9bee0c862bb4e4246\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Dropdown,\r\n  Image,\r\n  Modal,\r\n  Input,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport AvatarEditor from 'react-avatar-editor'\r\n\r\nimport firebase from '../../firebase'\r\n\r\nexport default function UserPanel({ currentUser }) {\r\n  const [user] = useState(currentUser)\r\n  const [modal, setModal] = useState(false)\r\n  const [preview, setPreview] = useState('')\r\n  const [croppedImage, setCroppedImage] = useState('')\r\n  const [blob, setBlob] = useState('')\r\n  const [uploadedCroppedImage, setUploadedCroppedImage] = useState('')\r\n  const [uploadingImage, setUploadingImage] = useState(false)\r\n  const [storageRef] = useState(firebase.storage().ref())\r\n  const [authUser] = useState(firebase.auth().currentUser)\r\n  const [userRef] = useState(firebase.database().ref('users'))\r\n\r\n  let avatarEditor\r\n  const metaData = {\r\n    contentType: 'image/jpeg',\r\n  }\r\n\r\n  const userActions = () => [\r\n    {\r\n      key: 'user',\r\n      text: (\r\n        <span>\r\n          Signed in as: <strong>{user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true,\r\n    },\r\n\r\n    {\r\n      key: 'avatar',\r\n      text: <span onClick={() => setModal(true)}>Change Avatar</span>,\r\n    },\r\n    {\r\n      key: 'signOut',\r\n      text: <span onClick={signOutUser}>Sign Out</span>,\r\n    },\r\n  ]\r\n\r\n  const signOutUser = async () => await firebase.auth().signOut()\r\n\r\n  const handleInputChange = (event) => {\r\n    const file = event.target.files[0]\r\n\r\n    const reader = new FileReader()\r\n    if (file) {\r\n      reader.readAsDataURL(file)\r\n      reader.addEventListener('load', () => {\r\n        setPreview(reader.result)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCropImage = () => {\r\n    if (avatarEditor) {\r\n      avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\r\n        let imageUrl = URL.createObjectURL(blob)\r\n        setCroppedImage(imageUrl)\r\n        setBlob(blob)\r\n      })\r\n    }\r\n  }\r\n\r\n  const uploadCroppedImage = () => {\r\n    setUploadingImage(true)\r\n    storageRef\r\n      .child(`avatars/users/${user.uid}`)\r\n      .put(blob, metaData)\r\n      .then((snap) => {\r\n        snap.ref.getDownloadURL().then(async (downloadedUrl) => {\r\n          setUploadedCroppedImage(downloadedUrl)\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (uploadedCroppedImage) {\r\n      changeAvatar(uploadedCroppedImage)\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [uploadedCroppedImage])\r\n  const changeAvatar = async (imageUrl) => {\r\n    try {\r\n      await authUser.updateProfile({\r\n        photoURL: uploadedCroppedImage,\r\n      })\r\n      await userRef.child(user.uid).update({\r\n        photoUrl: uploadedCroppedImage,\r\n      })\r\n      setUploadingImage(false)\r\n      setModal(false)\r\n    } catch (err) {\r\n      console.error('ERRORS::::', err)\r\n    }\r\n  }\r\n  return (\r\n    <Grid>\r\n      <Grid.Column>\r\n        <Grid.Row style={{ padding: '1.2em', margin: 0 }}>\r\n          <Header inverted as=\"h4\" style={{ padding: '1.2em' }}>\r\n            <Image\r\n              style={{ width: '3rem', height: '3rem' }}\r\n              avatar\r\n              src={user.photoURL}\r\n            />\r\n            {/* User menu */}\r\n            <Dropdown\r\n              trigger={\r\n                <span style={{ fontSize: '1.5rem' }} className=\"menu-label\">\r\n                  {user.displayName}\r\n                </span>\r\n              }\r\n              options={userActions()}\r\n            />\r\n          </Header>\r\n          <input\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            placeholder=\"Search for user\"\r\n            // value={searchTerm}\r\n            // onChange={handleSearchMessages}\r\n            // loading={searching}\r\n            className=\"chatheader__searchbar-input\"\r\n          />\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n      {/* Change avatar modal */}\r\n      <Modal basic open={modal}>\r\n        <Modal.Header>Change avatar</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            fluid\r\n            type=\"file\"\r\n            label=\"New Avatar\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <Grid centered stackable columns=\"2\">\r\n            <Grid.Row centered>\r\n              <Grid.Column className=\"ui centered align grid\">\r\n                {preview && (\r\n                  <AvatarEditor\r\n                    ref={(node) => (avatarEditor = node)}\r\n                    image={preview}\r\n                    height={220}\r\n                    width={300}\r\n                    scale={1.2}\r\n                  />\r\n                )}\r\n              </Grid.Column>\r\n\r\n              <Grid.Column className=\"ui centered align grid\">\r\n                {croppedImage && (\r\n                  <Image\r\n                    style={{ margin: '3.5rem auto' }}\r\n                    width={300}\r\n                    height={200}\r\n                    src={croppedImage}\r\n                  />\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          {croppedImage && (\r\n            <Button\r\n              color=\"green\"\r\n              inverted\r\n              onClick={uploadCroppedImage}\r\n              disabled={uploadingImage}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Change Avatar\r\n            </Button>\r\n          )}\r\n          <Button color=\"purple\" inverted onClick={handleCropImage}>\r\n            <Icon name=\"image\" />\r\n            Preview\r\n          </Button>\r\n          <Button\r\n            color=\"red\"\r\n            inverted\r\n            onClick={() => {\r\n              setModal(false)\r\n              setPreview('')\r\n            }}\r\n          >\r\n            <Icon name=\"remove\" />\r\n            Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Grid>\r\n  )\r\n}\r\n","import  { useEffect, useRef } from 'react'\n\nexport const useIsMount = () => {\n  const isMountRef = useRef(true)\n  useEffect(() => {\n    isMountRef.current = false\n  }, [])\n  return isMountRef.current\n}\n","import { SET_CHANNEL, SET_PRIVATE_CHANNEL, SET_USER_POSTS } from './actionTypes'\n\nexport const setChannel = channel => ({\n  type: SET_CHANNEL,\n  payload: channel,\n})\n\nexport const setPrivateChannel = isChannelPrivate => ({\n  type: SET_PRIVATE_CHANNEL,\n  payload: {\n    isChannelPrivate,\n  },\n})\n\nexport const setUserPosts = userPosts => ({\n  type: SET_USER_POSTS,\n  payload: userPosts,\n})\n","export const SET_CHANNEL = 'SET/CHANNEL'\nexport const SET_PRIVATE_CHANNEL = 'SET/PRIVATE_CHANNEL'\nexport const SET_USER_POSTS = 'SET/USER_POSTS'\n","import React, { useEffect, useState } from 'react'\r\nimport { Menu, Icon } from 'semantic-ui-react'\r\nimport { useDispatch\r\n  //  useSelector \r\n  } from 'react-redux'\r\nimport { useIsMount } from '../../hooks/isMount'\r\n\r\nimport {\r\n  setChannel as setChannelAction,\r\n  setPrivateChannel,\r\n} from '../../store/channels/actions'\r\nimport firebase from '../../firebase'\r\n\r\nexport default function Starred({ currentUser }) {\r\n  const [starredChannels, setStarredChannels] = useState([])\r\n  const [userRef] = useState(firebase.database().ref('users'))\r\n  const dispatch = useDispatch()\r\n  const isMount = useIsMount()\r\n\r\n  useEffect(() => {\r\n    isMount && userRef\r\n      .child(currentUser.uid)\r\n      .child('starred')\r\n      .on('child_added', snap => {\r\n        const starredChannel = { id: snap.key, ...snap.val() }\r\n        setStarredChannels(starredChannels => [\r\n          ...starredChannels,\r\n          starredChannel,\r\n        ])\r\n      })\r\n    return () => {\r\n      userRef.child(`${currentUser.uid}/starred`).off()\r\n    }\r\n    \r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    userRef\r\n      .child(currentUser.uid)\r\n      .child('starred')\r\n      .on('child_removed', snap => {\r\n        const unStarredChannel = { id: snap.key, ...snap.val() }\r\n        const filteredChannels = starredChannels.filter(\r\n          sc => sc.id !== unStarredChannel.id\r\n        )\r\n        setStarredChannels(filteredChannels)\r\n      })\r\n    return () => {\r\n      userRef.child(`${currentUser.uid}/starred`).off()\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [starredChannels])\r\n\r\n  const renderStarredChannels = channels =>\r\n    channels.length > 0 &&\r\n    channels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => channelClickHandler(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ))\r\n\r\n  const channelClickHandler = channel => {\r\n    // setActiveChannel(channel.id)\r\n    // setCurrentChannel(channel)\r\n    dispatch(setPrivateChannel(false))\r\n    dispatch(setChannelAction(channel))\r\n  }\r\n  return (\r\n    <div style={{ paddingBottom: '2rem' }}>\r\n      <p className=\"menu-label\">\r\n        <span>\r\n          <Icon name=\"star\" /> Channels\r\n        </span>{' '}\r\n        ({starredChannels.length})\r\n      </p>\r\n      {renderStarredChannels(starredChannels)}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport firebase from '../../firebase'\r\nimport { connect } from 'react-redux'\r\nimport { setChannel, setPrivateChannel } from '../../store/channels/actions'\r\n// prettier-ignore\r\nimport { \r\n  // Menu,\r\n   Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\r\n\r\nclass Channels extends React.Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: '',\r\n    channelDetails: '',\r\n    channelsRef: firebase.database().ref('channels'),\r\n    messagesRef: firebase.database().ref('messages'),\r\n    typingRef: firebase.database().ref('typing'),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addListeners()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners()\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = []\r\n    this.state.channelsRef.on('child_added', (snap) => {\r\n      loadedChannels.push(snap.val())\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel())\r\n      this.addNotificationListener(snap.key)\r\n    })\r\n  }\r\n\r\n  addNotificationListener = (channelId) => {\r\n    this.state.messagesRef.child(channelId).on('value', (snap) => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0\r\n\r\n    let index = notifications.findIndex(\r\n      (notification) => notification.id === channelId\r\n    )\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren()\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0,\r\n      })\r\n    }\r\n\r\n    this.setState({ notifications })\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off()\r\n  }\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0]\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setChannel(firstChannel)\r\n      this.setActiveChannel(firstChannel)\r\n      this.setState({ channel: firstChannel })\r\n    }\r\n    this.setState({ firstLoad: false })\r\n  }\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state\r\n\r\n    const key = channelsRef.push().key\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n      },\r\n    }\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: '', channelDetails: '' })\r\n        this.closeModal()\r\n        console.log('channel added')\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel()\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  changeChannel = (channel) => {\r\n    this.setActiveChannel(channel)\r\n    this.state.typingRef\r\n      .child(this.state.channel.id)\r\n      .child(this.state.user.uid)\r\n      .remove()\r\n    this.clearNotifications()\r\n    this.props.setChannel(channel)\r\n    this.props.setPrivateChannel(false)\r\n    this.setState({ channel })\r\n  }\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      (notification) => notification.id === this.state.channel.id\r\n    )\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications]\r\n      updatedNotifications[index].total =\r\n        this.state.notifications[index].lastKnownTotal\r\n      updatedNotifications[index].count = 0\r\n      this.setState({ notifications: updatedNotifications })\r\n    }\r\n  }\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id })\r\n  }\r\n\r\n  getNotificationCount = (channel) => {\r\n    let count = 0\r\n\r\n    this.state.notifications.forEach((notification) => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count\r\n      }\r\n    })\r\n\r\n    if (count > 0) return count\r\n  }\r\n\r\n  displayChannels = (channels) =>\r\n    channels.length > 0 &&\r\n    channels.map((channel) => (\r\n      <div\r\n        className=\"menu-item\"\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.8 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label className=\"active__icon\" color=\"red\">\r\n            {this.getNotificationCount(channel)}\r\n          </Label>\r\n        )}\r\n        # {channel.name}\r\n      </div>\r\n    ))\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails\r\n\r\n  openModal = () => this.setState({ modal: true })\r\n\r\n  closeModal = () => this.setState({ modal: false })\r\n\r\n  render() {\r\n    const { channels, modal } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"menu\">\r\n          <p className=\"menu-label\">\r\n            <span>\r\n              <Icon name=\"exchange\" /> Channels\r\n            </span>{' '}\r\n            ({channels.length}){' '}\r\n            <Icon\r\n              name=\"add\"\r\n              style={{ marginLeft: '3.1rem', cursor: 'pointer' }}\r\n              onClick={this.openModal}\r\n            />\r\n          </p>\r\n          {this.displayChannels(channels)}\r\n        </div>\r\n\r\n        {/* Add Channel Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"About the Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { setChannel, setPrivateChannel })(Channels)\r\n","// eslint-disable-next-line react-hooks/exhaustive-deps\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  //  Menu,\r\n   Icon } from 'semantic-ui-react'\r\n\r\nimport { setChannel, setPrivateChannel } from '../../store/channels/actions'\r\nimport firebase from '../../firebase'\r\n// import VideoChat from '../../components/VideoChat'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction DirectMessages({ currentUser }) {\r\n  const [users, setUsers] = useState([])\r\n  const [userRef] = useState(firebase.database().ref('users'))\r\n  const [connectedRef] = useState(firebase.database().ref('.info/connected'))\r\n  const [presenceRef] = useState(firebase.database().ref('presence'))\r\n  const [activeChannel, setActiveChannel] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const addListeners = (currentUserId) => {\r\n      userRef.on('child_added', (snap) => {\r\n        if (currentUser.uid !== snap.key) {\r\n          let user = snap.val()\r\n          user['uid'] = snap.key\r\n          user['status'] = 'offline'\r\n          setUsers((users) => [...users, user])\r\n        }\r\n      })\r\n\r\n      connectedRef.on('value', (snap) => {\r\n        if (snap.val() === true) {\r\n          const ref = presenceRef.child(currentUserId)\r\n          ref.set(true)\r\n          ref.onDisconnect().remove((err) => {\r\n            if (err !== null) {\r\n              console.log(err)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    if (currentUser) {\r\n      addListeners(currentUser.uid)\r\n    }\r\n    return () => {\r\n      userRef.off()\r\n      connectedRef.off()\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [userRef, connectedRef])\r\n\r\n  useEffect(() => {\r\n    const setUserStatues = (userId, connected = true) => {\r\n      setUsers((prevUsers) => {\r\n        return prevUsers.map((user) => {\r\n          if (user.uid === userId) {\r\n            user['status'] = `${connected ? 'online' : 'offline'}`\r\n          }\r\n          return user\r\n        })\r\n      })\r\n    }\r\n    presenceRef.on('child_added', (snap) => {\r\n      if (currentUser.uid !== snap.key) {\r\n        setUserStatues(snap.key)\r\n      }\r\n    })\r\n\r\n    presenceRef.on('child_removed', (snap) => {\r\n      if (currentUser.uid !== snap.key) {\r\n        setUserStatues(snap.key, false)\r\n      }\r\n    })\r\n    return () => {\r\n      presenceRef.off()\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [])\r\n\r\n  const isUserOnline = (user) => user.status === 'online'\r\n\r\n  const changeChannel = (user) => {\r\n    const channelId = getChannelId(user.uid)\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name,\r\n    }\r\n    dispatch(setChannel(channelData))\r\n    dispatch(setPrivateChannel(true))\r\n    setActiveChannel(user.uid)\r\n  }\r\n\r\n  const getChannelId = (userId) => {\r\n    const currentUserId = currentUser.uid\r\n    // Check for creating a unique path...\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <p className=\"menu-label\">\r\n        <span>\r\n          <Icon name=\"mail\" /> Direct Messages\r\n        </span>{' '}\r\n        ({users.length})\r\n      </p>\r\n      {users.map((user, index) => {\r\n        return (\r\n          <div\r\n            key={user.uid}\r\n            active={activeChannel === user.uid}\r\n            onClick={() => changeChannel(user)}\r\n            className=\"menu-item-label\"\r\n            // style={{ color: \"blue\",opacity: 0.8, fontStyle: 'italic' }}\r\n          >\r\n            @ {user.name}\r\n            <Icon className=\"active__icon\" name=\"circle\" color={isUserOnline(user) ? 'green' : 'red'} />\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DirectMessages)\r\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport './sidePanel.scss'\nimport UserPanel from './UserPanel'\nimport Starred from './Starred'\nimport Channels from './Channels'\nimport DirectMessages from './DirectMessages'\n// import VideoChat from '../VideoChat'\n// import VideoChannel from './VideoChannel'\n\nexport default function SidePanel({ currentUser }) {\n  return (\n    <Menu\n      inverted\n      size=\"large\"\n      fixed=\"left\"\n      vertical\n      id=\"menu\"\n    >\n      <UserPanel currentUser={currentUser} />\n      <Starred currentUser={currentUser} />\n      <Channels currentUser={currentUser} />\n      {/* <VideoChat/> */}\n      <DirectMessages currentUser={currentUser} />\n      {/* <VideoChannel currentUser={currentUser} /> */}\n    </Menu>\n  )\n}\n","import React from 'react'\r\nimport {\r\n  //  Header, Segment, Input,\r\n  Icon,\r\n} from 'semantic-ui-react'\r\n// import { fade, makeStyles } from '@material-ui/core'\r\n// import { useSelector } from 'react-redux'\r\n// import { Link } from 'react-router-dom'\r\nimport './MessageHeader.scss'\r\nimport useDarkMode from 'use-dark-mode'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\r\n// import FlareIcon from '@material-ui/icons/Flare';\r\nimport VideocamIcon from '@material-ui/icons/Videocam'\r\n// import MicIcon from '@material-ui/icons/Mic'\r\n\r\n// const useStyles = makeStyles((theme) => {\r\n//   return {\r\n//     search: {\r\n//       position: 'relative',\r\n//       borderRadius: theme.shape.borderRadius,\r\n//       backgroundColor: '#212226',\r\n//       '&:hover': {\r\n//         backgroundColor: fade('#212226', 0.5),\r\n//       },\r\n//       marginLeft: 0,\r\n//       marginRight: theme.spacing(0.4),\r\n//       width: '100%',\r\n//       [theme.breakpoints.up('sm')]: {\r\n//         marginLeft: theme.spacing(1),\r\n//         width: 'auto',\r\n//       },\r\n//     },\r\n//     inputRoot: {\r\n//       color: 'inherit',\r\n//     },\r\n//     inputInput: {\r\n//       padding: theme.spacing(1, 1, 1, 0),\r\n//       fontSize: theme.spacing(1.5),\r\n//       // vertical padding + font size from searchIcon\r\n//       paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n//       transition: theme.transitions.create('width'),\r\n//       width: '100%',\r\n//       [theme.breakpoints.up('sm')]: {\r\n//         width: '12ch',\r\n//         '&:focus': {\r\n//           width: '20ch',\r\n//         },\r\n//       },\r\n//     },\r\n//   }\r\n// })\r\n\r\nexport default function MessagesHeader({\r\n  channelName,\r\n  users,\r\n  searchTerm,\r\n  handleSearchMessages,\r\n  searching,\r\n  isChannelPrivate,\r\n  handleStarChannel,\r\n  isStarred,\r\n}) {\r\n  const darkMode = useDarkMode(true)\r\n  return (\r\n    <div className=\"chat__main\">\r\n      <div className=\"chatheader\">\r\n        <div className=\"chatheader__topic\">\r\n          <h3>\r\n            <span>\r\n              {channelName}\r\n              {!isChannelPrivate && (\r\n                <Icon\r\n                  style={{ marginLeft: '5px' }}\r\n                  onClick={handleStarChannel}\r\n                  name={isStarred ? 'star' : 'star outline'}\r\n                  color={isStarred ? 'yellow' : 'black'}\r\n                />\r\n              )}\r\n            </span>\r\n            <span style={{ marginLeft: '10px' }}>{users}</span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"chatheader__items\">\r\n          <div className=\"chatheader__items-left\">\r\n            <Link\r\n              to=\"/video\"\r\n              target=\"_blank\"\r\n              style={{ marginTop: 7, color: 'silver' }}\r\n            >\r\n              <VideocamIcon />\r\n            </Link>\r\n            {/* <Link to=\"/audio\" target=\"_blank\">\r\n            <MicIcon />\r\n          </Link> */}\r\n            <Brightness4Icon onClick={darkMode.toggle} />\r\n            {/* <FlareIcon onClick={darkMode.disable}/> */}\r\n          </div>\r\n          <div className=\"chatheader__searchbar\">\r\n            <input\r\n              size=\"mini\"\r\n              icon=\"search\"\r\n              placeholder=\"Search\"\r\n              value={searchTerm}\r\n              onChange={handleSearchMessages}\r\n              loading={searching}\r\n              className=\"chatheader__searchbar-input\"\r\n            />\r\n            <div className=\"chatheader__searchbar-searchicon\">\r\n              <svg\r\n                aria-hidden=\"false\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M21.707 20.293L16.314 14.9C17.403 13.504 18 11.799 18 10C18 7.863 17.167 5.854 15.656 4.344C14.146 2.832 12.137 2 10 2C7.863 2 5.854 2.832 4.344 4.344C2.833 5.854 2 7.863 2 10C2 12.137 2.833 14.146 4.344 15.656C5.854 17.168 7.863 18 10 18C11.799 18 13.504 17.404 14.9 16.314L20.293 21.706L21.707 20.293ZM10 16C8.397 16 6.891 15.376 5.758 14.243C4.624 13.11 4 11.603 4 10C4 8.398 4.624 6.891 5.758 5.758C6.891 4.624 8.397 4 10 4C11.603 4 13.109 4.624 14.242 5.758C15.376 6.891 16 8.398 16 10C16 11.603 15.376 13.11 14.242 14.243C13.109 15.376 11.603 16 10 16Z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"chatheader__items-right\">\r\n            <svg\r\n              x=\"0\"\r\n              y=\"0\"\r\n              aria-hidden=\"false\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n            >\r\n              <path\r\n                d=\"M19 3H4.99C3.88 3 3.01 3.89 3.01 5L3 19C3 20.1 3.88 21 4.99 21H19C20.1 21 21 20.1 21 19V5C21 3.89 20.1 3 19 3ZM19 15H15C15 16.66 13.65 18 12 18C10.35 18 9 16.66 9 15H4.99V5H19V15Z\"\r\n                fill=\"currentColor\"\r\n              ></path>\r\n            </svg>\r\n            <svg\r\n              x=\"0\"\r\n              y=\"0\"\r\n              aria-hidden=\"false\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M12 2C6.486 2 2 6.487 2 12C2 17.515 6.486 22 12 22C17.514 22 22 17.515 22 12C22 6.487 17.514 2 12 2ZM12 18.25C11.31 18.25 10.75 17.691 10.75 17C10.75 16.31 11.31 15.75 12 15.75C12.69 15.75 13.25 16.31 13.25 17C13.25 17.691 12.69 18.25 12 18.25ZM13 13.875V15H11V12H12C13.104 12 14 11.103 14 10C14 8.896 13.104 8 12 8C10.896 8 10 8.896 10 10H8C8 7.795 9.795 6 12 6C14.205 6 16 7.795 16 10C16 11.861 14.723 13.429 13 13.875Z\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport mime from 'mime-types'\nimport { Modal, Button, Input, Icon } from 'semantic-ui-react'\n\nexport default function UploadFileModal({ open, closeModal, uploadFile }) {\n  const [file, setFile] = React.useState(null)\n\n  const handleFileChange = event => {\n    const file = event.target.files[0]\n    if (file !== null) {\n      setFile(file)\n    }\n  }\n\n  const handleUpload = () => {\n    if (isFileAuthorized(file.name)) {\n      const metaData = {\n        contentType: mime.contentType(file.name),\n      }\n      uploadFile(file, metaData)\n      clearFile()\n      closeModal()\n    }\n  }\n\n  const isFileAuthorized = fileName =>\n    ['image/jpeg', 'image/png'].includes(mime.lookup(fileName))\n\n  const clearFile = () => setFile(null)\n\n  return (\n    <Modal open={open} onClose={closeModal}>\n      <Modal.Header>Select a file</Modal.Header>\n      <Modal.Content>\n        <Input\n          fluid\n          type=\"file\"\n          label=\"Upload File(jpeg, png)\"\n          onChange={handleFileChange}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={handleUpload} color=\"green\">\n          <Icon name=\"cloud upload\" /> Upload\n        </Button>\n        <Button\n          onClick={() => {\n            setFile('')\n            closeModal()\n          }}\n          color=\"red\"\n        >\n          <Icon name=\"remove\" />\n          Cancel\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Progress } from 'semantic-ui-react'\n\nexport default function ProgressBar({ uploadPercent, uploadState }) {\n  return (\n    uploadState === 'UPLOADING' && (\n      <Progress\n        inverted\n        className=\"progress__bar\"\n        percent={uploadPercent}\n        progress\n        indicating\n        size=\"medium\"\n      />\n    )\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { Picker, emojiIndex } from 'emoji-mart'\nimport ReactGiphySearch from 'react-giphy-searchbox'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport GifIcon from '@material-ui/icons/Gif'\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\nimport firebase from '../../firebase'\nimport UploadFileModal from './UploadFileModal'\nimport ProgressBar from './ProgressBar'\nimport './MessageForm.scss'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { IconButton } from '@material-ui/core'\n\nexport default function MessagesForm({\n  currentChannel,\n  currentUser,\n  messagesRef,\n  isChannelPrivate,\n}) {\n  const [message, setMessage] = useState('')\n  const [\n    // status\n    , setStatus] = useState('IDLE')\n  const [\n    // errors\n    , setErrors] = useState([])\n  const [modal, setModal] = useState(false)\n  const [storageRef] = useState(firebase.storage().ref())\n  const [typingRef] = useState(firebase.database().ref('typing'))\n  const [uploadTask, setUploadTask] = useState(null)\n  const [percentUpload, setPercentUpload] = useState(0)\n  const [uploadState, setUploadState] = useState('')\n  const [pathToUpload, setPathToUpload] = useState('')\n  const [emojiPicker, setEmojiPicker] = useState(false)\n  const [showGifs, setShowGifs] = useState(false)\n  const [\n    // gifSrc\n    , setGifsrc] = useState('')\n  const messageInputRef = useRef(null)\n  // console.log(currentChannel)\n  // const theme = useDarkMode(true)\n\n  useEffect(() => {\n    // listener for upload task, when it's done; this will be called.\n    if (uploadTask !== null) {\n      uploadTask.on(\n        'state_changed',\n        (snap) => {\n          const percentage = Math.round(\n            (snap.bytesTransferred / snap.totalBytes) * 100\n          )\n          setPercentUpload(percentage)\n        },\n        (err) => {\n          setUploadState('ERROR')\n          setErrors((errors) => [...errors, err.message])\n        },\n        () => {\n          uploadTask.snapshot.ref\n            .getDownloadURL()\n            .then((downloadedUrl) => {\n              sendFileMessage(downloadedUrl, pathToUpload)\n            })\n            .catch((err) => {\n              setUploadState('ERROR')\n              setErrors((errors) => [...errors, err.message])\n            })\n        }\n      )\n    }\n\n    return () => {\n      if (uploadTask !== null) {\n        uploadTask.cancel()\n        setUploadTask(null)\n      }\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [uploadTask])\n\n  // Gif handler\n  const sendFileMessage = (downloadedFileUrl, filePath) => {\n    messagesRef()\n      .child(filePath)\n      .push()\n      .set(createMessage(downloadedFileUrl))\n      .then(() => {\n        setUploadState('DONE')\n      })\n      .catch((err) => {\n        setErrors((errors) => [...errors, err])\n      })\n  }\n\n  const createMessage = (file = null) => {\n    const messageBody = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: currentUser.uid,\n        name: currentUser.displayName,\n        avatar: currentUser.photoURL,\n      },\n    }\n    if (file !== null) {\n      messageBody['image'] = file\n    } else {\n      messageBody['content'] = message\n    }\n    return messageBody\n  }\n\n  const resetState = () => {\n    setMessage('')\n    setErrors((errors) => [])\n  }\n\n  const sendMessage = async () => {\n    if (message) {\n      setStatus('PENDING')\n      try {\n        await messagesRef().child(currentChannel.id).push().set(createMessage())\n        await typingRef.child(currentChannel.id).child(currentUser.uid).remove()\n        resetState()\n        setStatus('RESOLVED')\n      } catch (err) {\n        console.log('Error while sending message: ', err)\n        setStatus('REJECTED')\n        setErrors((errors) => [...errors, { message: err.message }])\n      }\n    } else {\n      setErrors((errors) => [...errors, { message: 'Add a message..' }])\n    }\n  }\n\n  const getFilePath = (channelId) => {\n    return isChannelPrivate ? `chat/private/${channelId}` : `chat/public`\n  }\n\n  const uploadFile = (file, metaData) => {\n    console.log(file)\n    setPathToUpload(currentChannel.id)\n    const filePath = `${getFilePath(currentChannel.id)}/${uuid()}.jpg`\n    setUploadState('UPLOADING')\n    const fileReference = storageRef.child(filePath).put(file, metaData)\n    setUploadTask(fileReference)\n    console.log(fileReference)\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) {\n      sendMessage()\n    }\n    if (message) {\n      typingRef\n        .child(currentChannel.id)\n        .child(currentUser.uid)\n        .set(currentUser.displayName)\n    } else {\n      typingRef.child(currentChannel.id).child(currentUser.uid).remove()\n    }\n  }\n\n  // const uploadgif = (gif) => {\n  //   const filePath = `${gif}`\n\n  //   // setUploadState('UPLOADING')\n  //   const fileReference = storageRef.child(filePath).put(gif)\n  //   setUploadTask(fileReference)\n  // }\n  const handleEmojiPicker = () => {\n    setEmojiPicker(!emojiPicker)\n  }\n\n  const handleAddEmoji = (emoji) => {\n    console.log(emoji)\n    const oldMessage = message\n    const newMessage = colonToUnicode(` ${oldMessage} ${emoji.colons} `)\n    // newMessage\n    setMessage(newMessage)\n    setShowGifs(false)\n    setEmojiPicker(false)\n\n    setTimeout(() => {\n      messageInputRef.current.focus()\n    }, 0)\n  }\n\n  const colonToUnicode = (message) => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\n      x = x.replace(/:/g, '')\n      let emoji = emojiIndex.emojis[x]\n      if (typeof emoji !== 'undefined') {\n        let unicode = emoji.native\n        if (typeof unicode !== 'undefined') {\n          return unicode\n        }\n      }\n      x = ':' + x + ':'\n      return x\n    })\n  }\n\n  const gifSelectHandler = (gif) => {\n    console.log(gif)\n    const newMessage = gif.images.downsized_medium.url\n    setGifsrc(newMessage)\n    const filePath = `${newMessage}.jpg`\n    createMessage(filePath)\n    console.log(filePath)\n    console.log(gif.images.downsized_medium)\n\n    var blob = new Blob([filePath], { type: 'image/jpeg' })\n    const fileReference = storageRef.child(filePath).put(blob);\n    setUploadTask(fileReference)\n    setMessage(filePath)\n    setShowGifs(false)\n\n    setTimeout(() => {\n      messageInputRef.current.focus()\n    }, 0)\n  }\n\n  const openModal = () => setModal(true)\n\n  const closeModal = () => setModal(false)\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  // }\n  const channelName = currentChannel.name.toLowerCase()\n  return (\n    <div className=\"message__form\">\n      {showGifs && (\n        <ReactGiphySearch\n          apiKey={process.env.REACT_APP_GIF_KEY}\n          onSelect={gifSelectHandler}\n        />\n      )}\n      {/* <img src={gifSrc} alt=\"newgif\" /> */}\n      {emojiPicker && (\n        <Picker\n          set=\"apple\"\n          className=\"emojiPicker\"\n          title=\"Pick an emoji\"\n          emoji=\"point_up\"\n          onSelect={handleAddEmoji}\n        />\n      )}\n      <div className=\"chatsearchbar\">\n        <div className=\"chatsearchbar__addicon\">\n          <IconButton\n            onClick={openModal}\n            className=\"icon__button\"\n            aria-label=\"settings\"\n          >\n            <AddCircleIcon className=\"icon__button\" style={{ fontSize: 25 }} />\n          </IconButton>\n        </div>\n        <div className=\"chatsearchbar__input\">\n          <input\n            autoFocus\n            placeholder={`Message #${channelName}`}\n            value={message}\n            onChange={(event) => setMessage(event.target.value)}\n            ref={messageInputRef}\n            onKeyPress={handleKeyPress}\n            // className={\n            //   errors.some((err) => err.message.includes('message'))\n            //     ? 'error'\n            //     : ''\n            // }\n          />\n        </div>\n        <div className=\"chatsearchbar__gifcon\">\n          <IconButton\n            onClick={() => {\n              // setEmojiPicker(false)\n              setShowGifs(!showGifs)\n            }}\n            className=\"icon__button\"\n            aria-label=\"settings\"\n          >\n            <GifIcon className=\"icon__button\" style={{ fontSize: 30 }} />\n          </IconButton>\n        </div>\n        <div className=\"chatsearchbar__emojiicon\">\n          <IconButton\n            // className=\"icon__button\"\n            icon={emojiPicker ? 'close' : 'smile outline'}\n            content={emojiPicker ? 'close' : null}\n            onClick={handleEmojiPicker}\n          >\n            <InsertEmoticonIcon\n              className=\"icon__button\"\n              style={{ fontSize: 30 }}\n            />\n          </IconButton>\n        </div>\n      </div>\n\n      <UploadFileModal\n        open={modal}\n        closeModal={closeModal}\n        uploadFile={uploadFile}\n      />\n      <ProgressBar uploadPercent={percentUpload} uploadState={uploadState} />\n    </div>\n  )\n}\n","import React from 'react'\r\nimport { Image } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\nimport './Message.scss'\r\nimport { Avatar } from '@material-ui/core'\r\nimport ReactLinkify from 'react-linkify'\r\n\r\nconst isOwnUser = (message, user) =>\r\n  message.user.id === user.uid ? 'message__self' : ''\r\n\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow()\r\n\r\nexport default function Message({ message, user }) {\r\n  const isImage = (message) =>\r\n    message.hasOwnProperty('image') && !message.hasOwnProperty('content')\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      <ReactLinkify>\r\n        <Avatar src={message.user.avatar} />\r\n        <div className={isOwnUser(message, user)}>\r\n          <div className=\"message__info\">\r\n            <h4>\r\n              {message.user.name}\r\n              <span className=\"message__timestamp\">\r\n                {timeFromNow(message.timestamp)}\r\n              </span>\r\n            </h4>\r\n\r\n            {isImage(message) ? (\r\n              <Image src={message.image} style={{ padding: ' 0.7em 0' }} />\r\n            ) : (\r\n              <p className=\"content\">{message.content}</p>\r\n            )}\r\n            {/* {message ? <p>{message}</p> : <img src={\"gifUrl\"} alt=\"gif\" />} */}\r\n          </div>\r\n        </div>\r\n      </ReactLinkify>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\n\nconst Typing = () => {\n  return (\n    <div className=\"typing\">\n      <div className=\"typing__dot\"></div>\n      <div className=\"typing__dot\"></div>\n      <div className=\"typing__dot\"></div>\n    </div>\n  )\n}\n\nexport default Typing\n","import React from 'react'\n\nexport default function Skeleton() {\n  return (\n    <div className=\"skeleton\">\n      <div className=\"skeleton__avatar\"></div>\n      <div className=\"skeleton__author\"></div>\n      <div className=\"skeleton__details\"></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { \r\n  // Segment\r\n   Comment } from 'semantic-ui-react'\r\nimport { useIsMount } from '../../hooks/isMount'\r\nimport { setUserPosts } from '../../store/channels/actions'\r\n\r\nimport MessagesHeader from './MessagesHeader'\r\nimport MessagesForm from './MessagesForm'\r\nimport Message from './Message'\r\nimport Typing from './Typing'\r\nimport './Message.scss'\r\n\r\nimport firebase from '../../firebase'\r\nimport Skeleton from './Skeleton'\r\n// import VideoChat from '../VideoChat'\r\n\r\nexport default function Messages({ currentUser, currentChannel }) {\r\n  const isMount = useIsMount()\r\n  const [user] = useState(currentUser)\r\n  const [channel] = useState(currentChannel)\r\n  const [messages, setMessages] = useState([])\r\n  const [messagesLoading, setMessagesLoading] = useState(true)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [searchingMessages, setSearchingMessages] = useState(false)\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [typingUsers, setTypingUsers] = useState([])\r\n  const [isStarred, setIsStarred] = useState(true)\r\n  // const [video, setVideo] = useState(true)\r\n\r\n  const [messagesRef] = useState(firebase.database().ref('messages'))\r\n  const [privateMessagesRef] = useState(\r\n    firebase.database().ref('privateMessages')\r\n  )\r\n  const [userRef] = useState(firebase.database().ref('users'))\r\n  const [typingRef] = useState(firebase.database().ref('typing'))\r\n  const [connectedRef] = useState(firebase.database().ref('.info/connected'))\r\n  const [listeners, setListeners] = useState([])\r\n  const dispatch = useDispatch()\r\n  const isChannelPrivate = useSelector((state) => state.channel.private)\r\n\r\n  const messagesEndRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (user && channel) {\r\n      addListeners(channel)\r\n      addUserStarListener(channel.id, user.uid)\r\n    }\r\n    return () => {\r\n      return removeAllListeners()\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [])\r\n\r\n  const addListeners = (channel) => {\r\n    getAllMessagesListener(channel.id)\r\n    typingListener(channel.id)\r\n  }\r\n\r\n  const addToListeners = (id, ref, event) => {\r\n    const index = listeners.findIndex(\r\n      (listener) =>\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n    )\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event }\r\n      setListeners((prevListeners) => [...prevListeners, newListener])\r\n    }\r\n  }\r\n  /**\r\n   *\r\n   * @param {string} channelId\r\n   * Change listener to the channel, triggers whenever the message is added, get all the messages of channel\r\n   */\r\n  const getAllMessagesListener = (channelId) => {\r\n    getMessagesRef()\r\n      .child(channelId)\r\n      .on('child_added', (snap) => {\r\n        const message = snap.val()\r\n        setMessagesLoading(false)\r\n        setMessages((messages) => [...messages, message])\r\n      })\r\n    addToListeners(channelId, getMessagesRef(), 'child_added')\r\n  }\r\n\r\n  /**\r\n   * Star channel listener\r\n   */\r\n\r\n  const addUserStarListener = (channelId, userId) => {\r\n    userRef\r\n      .child(userId)\r\n      .child(`starred`)\r\n      .once('value')\r\n      .then((data) => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val())\r\n          const prevStarred = channelIds.includes(channelId)\r\n          setIsStarred(prevStarred)\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleStarChannel = () => {\r\n    setIsStarred(!isStarred)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // If is starred! then add this channel to favorites\r\n    if (!isMount) {\r\n      if (isStarred) {\r\n        userRef.child(`${user.uid}/starred`).update({\r\n          [channel.id]: {\r\n            name: channel.name,\r\n            description: channel.description,\r\n            createdBy: {\r\n              name: channel.createdBy.name,\r\n              avatar: channel.createdBy.avatar,\r\n            },\r\n          },\r\n        })\r\n      } else {\r\n        // if unstarred, then remove this channel from favorites\r\n        userRef.child(`${user.uid}/starred/${channel.id}`).remove((err) => {\r\n          if (err !== null) {\r\n            console.error('ERROR: ', err)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [isStarred])\r\n\r\n  const typingListener = (channelId) => {\r\n    let allTypingUsers = []\r\n    typingRef.child(channelId).on('child_added', (snap) => {\r\n      if (snap.key !== currentUser.id) {\r\n        allTypingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val(),\r\n        })\r\n        setTypingUsers(allTypingUsers)\r\n      }\r\n    })\r\n    addToListeners(channelId, typingRef, 'child_added')\r\n\r\n    typingRef.child(channelId).on('child_removed', (snap) => {\r\n      const index = allTypingUsers.findIndex((tu) => tu.id === snap.key)\r\n      if (index !== -1) {\r\n        allTypingUsers = allTypingUsers.filter((tu) => tu.id !== snap.key)\r\n        setTypingUsers(allTypingUsers)\r\n      }\r\n    })\r\n    addToListeners(channelId, typingRef, 'child_removed')\r\n\r\n    connectedRef.on('value', (snap) => {\r\n      if (snap.val === true) {\r\n        typingRef\r\n          .child(currentChannel.id)\r\n          .child(currentUser.uid)\r\n          .onDisconnect()\r\n          .remove((err) => {\r\n            if (err !== null) {\r\n              console.log(err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  const removeAllListeners = () => {\r\n    listeners.forEach((listener) => {\r\n      listener.ref.child(listener.id).off(listener.event)\r\n    })\r\n  }\r\n\r\n  const getMessagesRef = () => {\r\n    return isChannelPrivate ? privateMessagesRef : messagesRef\r\n  }\r\n  /**\r\n   *\r\n   * @param {object} channel\r\n   * returns the channel name\r\n   */\r\n  const getChannelName = (channel) =>\r\n    channel && `${!isChannelPrivate ? '#' : '@'} ${channel.name}`\r\n\r\n  /**\r\n   *\r\n   * @param {Array} messages\r\n   * @description Get the total count and generate a readable string\r\n   * @return {string} - {userCount} user{plural ? s : _ }\r\n   */\r\n  const getUniqueUsers = (messages) => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name)\r\n      }\r\n      return acc\r\n    }, [])\r\n\r\n    const numUniqueUsers = uniqueUsers.length\r\n    const areUserPlurals = numUniqueUsers > 1 || numUniqueUsers === 0\r\n    return `${numUniqueUsers} user${areUserPlurals && 's'}`\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   * handles the event change for search field in message header\r\n   */\r\n  const handleSearchMessages = (event) => {\r\n    setSearchTerm(event.target.value)\r\n    setSearchingMessages(true)\r\n  }\r\n\r\n  /**\r\n   * Search effect handler\r\n   * When the search term is changed, we are filtering out the messages\r\n   */\r\n  useEffect(() => {\r\n    const regex = new RegExp(searchTerm, 'gi')\r\n    const results = messages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message)\r\n      }\r\n      return acc\r\n    }, [])\r\n    setSearchResults(results)\r\n    //setting the search indicator after one second\r\n    setTimeout(() => setSearchingMessages(false), 800)\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [searchTerm])\r\n\r\n  /**\r\n   *\r\n   * @param {Array} messages\r\n   * renders the messages\r\n   */\r\n  const renderMessages = (messages) => {\r\n    return (\r\n      messages.length > 0 &&\r\n      messages.map((message) => (\r\n        <Message key={message.timestamp} message={message} user={user} />\r\n      ))\r\n    )\r\n  }\r\n\r\n  const renderSkeleton = (loading) => {\r\n    return loading ? [...Array(10)].map((_, i) => <Skeleton key={i} />) : null\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @description counts the total posts\r\n   * @return {object} users with total post count & avatar\r\n   */\r\n\r\n  const countUserPosts = () => {\r\n    const userPosts = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1,\r\n        }\r\n      }\r\n      return acc\r\n    }, {})\r\n    dispatch(setUserPosts(userPosts))\r\n  }\r\n\r\n  useEffect(() => {\r\n    countUserPosts()\r\n    if (!!messagesEndRef) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  }, [messages])\r\n\r\n  const displayTypingUsers = (users) => {\r\n    return (\r\n      users.length > 0 &&\r\n      users.map((tu) => {\r\n        return (\r\n          <div\r\n            key={tu.id}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginBottom: '0.3em',\r\n            }}\r\n          >\r\n            <span className=\"user__typing\">{tu.name} is typing...</span>\r\n            <Typing />\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={isChannelPrivate ? 'chatPrivate' : 'chat'}>\r\n      <div>\r\n        <MessagesHeader\r\n          channelName={getChannelName(channel)}\r\n          users={getUniqueUsers(messages)}\r\n          searchTerm={searchTerm}\r\n          handleSearchMessages={handleSearchMessages}\r\n          searching={searchingMessages}\r\n          isChannelPrivate={isChannelPrivate}\r\n          handleStarChannel={handleStarChannel}\r\n          isStarred={isStarred}\r\n        />\r\n\r\n        <div className=\"messages\">\r\n          <Comment.Group>\r\n            {renderSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? renderMessages(searchResults)\r\n              : renderMessages(messages)}\r\n            <div ref={messagesEndRef}></div>\r\n          </Comment.Group>\r\n          {displayTypingUsers(typingUsers)}\r\n        </div>\r\n\r\n        <MessagesForm\r\n          currentChannel={currentChannel}\r\n          currentUser={currentUser}\r\n          messagesRef={getMessagesRef}\r\n          isChannelPrivate={isChannelPrivate}\r\n        />\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport {\n  // Segment,\n  // Accordion,\n  // Header,\n  Icon,\n  Image,\n  List,\n  ListItem,\n  // Sidebar,\n} from 'semantic-ui-react'\nimport './metaPanel.scss'\n\nexport default function MetaPanel({\n  isPrivateChannel,\n  currentChannel,\n  userPosts,\n}) {\n  // const [activeIndex, setActiveIndex] = React.useState(0)\n\n  // const handleAccordionChange = (event, titleProps) => {\n  //   const { index } = titleProps\n  //   const newIndex = activeIndex === index ? -1 : index\n  //   setActiveIndex(newIndex)\n  // }\n\n  const renderUserPosts = () => {\n    return Object.entries(userPosts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, value], i) => {\n        return (\n          <ListItem className=\"metalist\" key={key}>\n            <Image\n              style={{ height: '2.5rem', width: '2.5rem' }}\n              avatar\n              src={value.avatar}\n            />\n            <List.Content className=\"metalist__content\">\n              <List.Header as=\"a\" style={{ fontSize: '1.2rem' }}>\n                {key}\n              </List.Header>\n              <span\n                style={{ fontSize: '1rem' }}\n              >\n                {getPostText(value.count)}\n              </span>\n            </List.Content>\n          </ListItem>\n        )\n      })\n  }\n\n  const getPostText = (count) =>\n    count > 1 || count === 0 ? `${count} posts` : `${count} post`\n\n  if (isPrivateChannel) {\n    return null\n  }\n\n  return (\n    <div className=\"metapanel\" loading={!currentChannel}>\n      <div className=\"metapanel__content\">\n      <h3>About # {currentChannel && currentChannel.name}</h3>\n\n      <div>\n        <p>{currentChannel && currentChannel.description}</p>\n        <h4>\n          <Icon name=\"user circle\" />\n          Top posters\n        </h4>\n        <p>\n          <List>{userPosts && renderUserPosts(userPosts)}</List>\n        </p>\n        <div className=\"meta__createdBy\">\n          <h4>\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </h4>\n          <h4>\n            <img className=\"img\" src={currentChannel && currentChannel.createdBy.avatar} alt=\"currentChannel\"/>\n            <p>{currentChannel && currentChannel.createdBy.name}</p>\n          </h4>\n        </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const lightTheme = {\r\n  sidebar: '#f2f3f5',\r\n  scrollbarPath: '#f2f2f2',\r\n  channelList: '#747f8d',\r\n  topSearchBar: '#e3e5e8',\r\n  icons: '#4f5660',\r\n  icons_hover: '#9facbf',\r\n  messageSearchbar: '#ebedef',\r\n  chatHover: '#d4d7dc',\r\n  chatBackground: '#fff',\r\n  text: '#181818',\r\n  opacity: 0.9,\r\n}\r\n\r\nexport const darkTheme = {\r\n  sidebar: '#2f3136',\r\n  scrollbarPath: '#2e3338',\r\n  channelList: '#f9ffff',\r\n  topSearchBar: '#202225',\r\n  icons: '#b9bbbe',\r\n  messageSearchbar: '#40444b',\r\n  chatHover: '#393c43',\r\n  icons_hover: '#d3d6db',\r\n  chatBackground: '#36393f',\r\n  text: '#f2f2f2',\r\n  opacity: 1,\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body{\r\n        background: ${({ theme }) => theme.chatBackground};\r\n        color: ${({ theme }) => theme.text};\r\n        height: 100vh;\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        transition: all 0.50s linear;\r\n        overflow: hidden;\r\n    }\r\n    .app{\r\n        transition: all 0.50s linear;\r\n    }\r\n    .chatheader{\r\n        background-color: ${({ theme }) => theme.chatBackground};\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n\r\n       \r\n    }\r\n    .chatheader__searchbar-input{\r\n            color:${({ theme }) => theme.text};\r\n            background-color: ${({ theme }) => theme.topSearchBar};\r\n            transition: all 0.50s linear;\r\n\r\n\r\n    }\r\n    .chatheader__items{\r\n        color:${({ theme }) => theme.icons};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n\r\n    .metapanel{\r\n        background-color: ${({ theme }) => theme.sidebar};\r\n        color:  ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n\r\n    .message{\r\n        background-color: ${({ theme }) => theme.chatBackground};\r\n        color: ${({ theme }) => theme.text};\r\n\r\n        transition: all 0.5s linear;\r\n        \r\n\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.chatHover};\r\n            position: sticky;\r\n            /* width: 60vw; */\r\n        }\r\n    }\r\n    .messages{\r\n        background-color: ${({ theme }) => theme.chatBackground};\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n\r\n    .content{\r\n        opacity: ${({ theme }) => theme.opacity};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n    \r\n    .message__timestamp{\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n\r\n    .chatsearchbar{\r\n        background-color: ${({ theme }) => theme.messageSearchbar};\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n        input{\r\n            background-color: ${({ theme }) => theme.messageSearchbar};\r\n            color: ${({ theme }) => theme.text};\r\n            transition: all 0.50s linear;\r\n        }\r\n    }\r\n\r\n    .icon__button{\r\n        color: ${({ theme }) => theme.icons};\r\n        transition: all 0.50s linear;\r\n\r\n        /* font-size: 30px; */\r\n    }\r\n    .icon__button:hover{\r\n        color: ${({ theme }) => theme.icons_hover};\r\n        \r\n    }\r\n\r\n    #menu{\r\n        color: ${({ theme }) => theme.text};\r\n        background-color: ${({ theme }) => theme.sidebar};\r\n        transition: all 0.50s linear;\r\n    }\r\n    .menu-label{\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all 0.50s linear;\r\n\r\n    }\r\n\r\n    .menu-item{\r\n        color: ${({ theme }) => theme.text};\r\n        opacity: ${({ theme }) => theme.opacity};\r\n        transition: all 0.50s linear;\r\n\r\n\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.chatHover};\r\n        }\r\n    }\r\n\r\n    .menu-item-label{\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.chatHover};\r\n            /* transition: all 0.50s linear; */\r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n`\r\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport { useSelector } from 'react-redux'\nimport SidePanel from './SidePanel'\nimport Messages from './Messages'\nimport MetaPanel from './MetaPanel'\nimport useDarkMode from 'use-dark-mode'\nimport './App.scss'\nimport { darkTheme, GlobalStyles, lightTheme } from '../Themes/GlobalStyles'\nimport { ThemeProvider } from 'styled-components'\n\nexport default function App() {\n  const darkMode = useDarkMode(true)\n  const [isMounted, setIsMounted] = React.useState(false)\n  const theme = darkMode.value ? darkTheme : lightTheme\n  const { currentUser, currentChannel, isPrivateChannel, userPosts } =\n    useSelector(({ user, channel }) => ({\n      currentUser: user.currentUser,\n      currentChannel: channel.currentChannel,\n      isPrivateChannel: channel.private,\n      userPosts: channel.userPosts,\n    }))\n\n  React.useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {isMounted && (\n        <Grid columns=\"equal\" className=\"app\">\n          <SidePanel\n            key={currentUser && currentUser.id}\n            currentUser={currentUser}\n          />\n          <Grid.Column style={{ marginLeft: 268 }}>\n            {currentUser && currentChannel && (\n              <Messages\n                key={currentChannel && currentChannel.id}\n                currentChannel={currentChannel}\n                currentUser={currentUser}\n              />\n            )}\n          </Grid.Column>\n          {!isPrivateChannel && (\n            <Grid.Column width={2}>\n              <MetaPanel\n                isPrivateChannel={isPrivateChannel}\n                currentChannel={currentChannel}\n                userPosts={userPosts}\n              />\n            </Grid.Column>\n          )}\n        </Grid>\n      )}\n    </ThemeProvider>\n  )\n}\n","import React from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport './Auth.styles.scss'\r\nimport { Link,useHistory } from 'react-router-dom'\r\nimport firebase from '../../firebase'\r\n\r\nexport default function Login() {\r\n  const initialState = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n  const history = useHistory();\r\n  const [loginUserState, setRegisterUserState] = React.useState(initialState)\r\n  const [errors, setErrors] = React.useState([])\r\n  const [status, setStatus] = React.useState('')\r\n\r\n  const handleChange = (event) => {\r\n    setRegisterUserState({\r\n      ...loginUserState,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    const errors = []\r\n    if (formIsValid(loginUserState)) {\r\n      const { email, password } = loginUserState\r\n      setErrors(errors)\r\n      setStatus('PENDING')\r\n\r\n      try {\r\n        await firebase.auth().signInWithEmailAndPassword(email, password)\r\n        setStatus('RESOLVED')\r\n        history.push('/');\r\n      } catch (err) {\r\n        setStatus('RESOLVED')\r\n        setErrors(errors.concat({ message: err.message }))\r\n      }\r\n    } else {\r\n      let error = { message: 'Please fill the form' }\r\n      setErrors(errors.concat(error))\r\n    }\r\n    setRegisterUserState(initialState)\r\n\r\n  }\r\n\r\n  const formIsValid = ({ email, password }) => {\r\n    return email && password\r\n  }\r\n\r\n  const handleInputError = (errors, inputName) => {\r\n    return errors.some((err) =>\r\n      err.message.toLowerCase().includes(inputName.toLowerCase())\r\n    )\r\n      ? 'error'\r\n      : ''\r\n  }\r\n\r\n  const { email, password } = loginUserState\r\n \r\n\r\n  return (\r\n    <TransitionGroup>\r\n      <CSSTransition timeout={500} classNames=\"alert\">\r\n        <div className=\"auth\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"login\" style={{ marginTop: -70 }}>\r\n              <h2>\r\n                <Icon name=\"fork\" />\r\n                Welcome back!\r\n              </h2>\r\n              <h3>We're so excited to see you again!</h3>\r\n\r\n              <form size=\"large\" onSubmit={onSubmit}>\r\n                <label\r\n                  style={{\r\n                    color: errors.includes('email') ? '#d72323' : 'white',\r\n                  }}\r\n                >\r\n                  EMAIL\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={handleChange}\r\n                  className={handleInputError(errors, 'email')}\r\n                />\r\n                <label\r\n                  style={{\r\n                    color: errors.includes('password') ? '#d72323' : 'white',\r\n                  }}\r\n                >\r\n                  PASSWORD\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={handleChange}\r\n                  className={handleInputError(errors, 'password')}\r\n                />\r\n                <button\r\n                  disabled={status === 'PENDING'}\r\n                  className={status === 'PENDING' ? 'loading' : ''}\r\n                  type=\"submit\"\r\n                  color=\"purple\"\r\n                  size=\"large\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </form>\r\n              <h4>\r\n                <Link to=\"/forget-password\">Forget Password? </Link>\r\n              </h4>\r\n              {errors.length > 0 &&\r\n                errors.map((err, i) => (\r\n                  <div className=\"error\" key={i}>\r\n                    <p>{err.message}</p>\r\n                  </div>\r\n                ))}\r\n              <h4>\r\n                <Link to=\"/register\" style={{ fontSize: '1.2rem' }}>\r\n                  Register\r\n                </Link>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport './Auth.styles.scss'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport md5 from 'md5'\r\nimport firebase from '../../firebase'\r\n\r\nexport default function Register() {\r\n  const initialState = {\r\n    userName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  }\r\n\r\n  const [registerUserState, setRegisterUserState] = React.useState(initialState)\r\n  const [errors, setErrors] = React.useState([])\r\n  const [status, setStatus] = React.useState('')\r\n  const [successMessage,\r\n    //  setSuccessMessage\r\n    ] = React.useState(\"\");\r\n  const [userRef] = React.useState(firebase.database().ref('/users'))\r\n  const history = useHistory();\r\n  const handleChange = (event) => {\r\n    setRegisterUserState({\r\n      ...registerUserState,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const formIsValid = () => {\r\n    let errors = []\r\n    let error\r\n    if (isFormEmpty(registerUserState)) {\r\n      error = { message: 'Please fill in all the fields' }\r\n      setErrors(errors.concat(error))\r\n      return false\r\n    } else if (!isPasswordValid(registerUserState)) {\r\n      error = { message: 'Password is invalid' }\r\n      setErrors(errors.concat(error))\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const isFormEmpty = ({ userName, email, password, confirmPassword }) => {\r\n    return !userName || !email || !password || !confirmPassword\r\n  }\r\n\r\n  const isPasswordValid = ({ password, confirmPassword }) => {\r\n    if (password.length < 6 || confirmPassword.length < 6) {\r\n      return false\r\n    } else if (password !== confirmPassword) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if (formIsValid()) {\r\n      const { email, password } = registerUserState\r\n      const errors = []\r\n      setErrors(errors)\r\n      setStatus('PENDING')\r\n      try {\r\n        const createdUser = await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password)\r\n          \r\n        try {\r\n          await createdUser.user.updateProfile({\r\n            displayName: userName,\r\n            photoURL: `https://www.gravatar.com/avatar/${md5(\r\n              createdUser.user.email\r\n            )}?d=identicon`,\r\n          })\r\n          await saveUser(createdUser)\r\n          setStatus('RESOLVED')\r\n          history.push('/login')\r\n          // await auth().sendSignInLinkToEmail(email);\r\n          // firebase.auth().sendSignInLinkToEmail(email);\r\n          // setSuccessMessage(\"Please check your email\");\r\n        } catch (err) {\r\n          setStatus('RESOLVED')\r\n          setErrors(errors.concat({ message: err.message }))\r\n        }\r\n      } catch (err) {\r\n        setStatus('RESOLVED')\r\n        setErrors(errors.concat({ message: err.message }))\r\n      }\r\n    }\r\n    setRegisterUserState(initialState);\r\n\r\n  }\r\n\r\n  const saveUser = (createdUser) =>\r\n    userRef.child(createdUser.user.uid).set({\r\n      name: createdUser.user.displayName,\r\n      photoUrl: createdUser.user.photoURL,\r\n    })\r\n\r\n  const handleInputError = (errors, inputName) => {\r\n    return errors.some((err) =>\r\n      err.message.toLowerCase().includes(inputName.toLowerCase())\r\n    )\r\n      ? 'error'\r\n      : ''\r\n  }\r\n\r\n  const { userName, email, password, confirmPassword } = registerUserState\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"register\" style={{ marginTop: '-140px' }}>\r\n          <h2>\r\n            <Icon name=\"puzzle piece\" />\r\n            Register for new account\r\n          </h2>\r\n          <form onSubmit={onSubmit}>\r\n            <label\r\n              style={{\r\n                color: errors.includes('username') ? '#d72323' : 'white',\r\n              }}\r\n            >\r\n              USERNAME\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              icon=\"user\"\r\n              placeholder=\"User Name\"\r\n              value={userName}\r\n              onChange={handleChange}\r\n              className={handleInputError(errors, 'userName')}\r\n            />\r\n            \r\n            <label\r\n              style={{ color: errors.includes('email') ? '#d72323' : 'white' }}\r\n            >\r\n              EMAIL\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n              className={handleInputError(errors, 'email')}\r\n            />\r\n           \r\n\r\n            <label\r\n              style={{\r\n                color: errors.includes('password') ? '#d72323' : 'white',\r\n              }}\r\n            >\r\n              PASSWORD\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              className={handleInputError(errors, 'password')}\r\n            />\r\n            <label\r\n              style={{\r\n                color: errors.includes('password') ? '#d72323' : 'white',\r\n              }}\r\n            >\r\n              CONFIRM PASSWORD\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={handleChange}\r\n              className={handleInputError(errors, 'password')}\r\n            />\r\n            <button\r\n              disabled={status === 'PENDING'}\r\n              className={status === 'PENDING' ? 'loading' : ''}\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </button>\r\n            {/* </Segment> */}\r\n          </form>\r\n          {successMessage && <p className=\"error\">{successMessage}</p>}\r\n          {errors.length > 0 &&\r\n            errors.map((err, i) => (\r\n              <div className=\"error\" key={i}>\r\n                <p>{err.message}</p>\r\n              </div>\r\n            ))}\r\n          <div>\r\n            <Link to=\"/login\" style={{ fontSize: '1.2rem' }}>\r\n              Already have an account? Login!\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Loader, Dimmer } from 'semantic-ui-react'\n\nexport default function Spinner() {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Preparing chat...\" />\n    </Dimmer>\n  )\n}\n","import React, { createRef, useState } from 'react'\r\n// import './App.css'\r\nimport './VideoChat.scss'\r\nimport firebase from '../firebase'\r\nimport {\r\n  // Modal, Icon,\r\n  Button,\r\n  Input,\r\n} from 'semantic-ui-react'\r\n\r\nconst firestore = firebase.firestore()\r\n\r\nconst servers = {\r\n  iceServers: [\r\n    {\r\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n}\r\n\r\n// global variables for peer connection and media streams\r\nlet pc, localStream, remoteStream\r\n\r\nfunction VideoChat() {\r\n  const localVideoRef = createRef()\r\n  const remoteVideoRef = createRef()\r\n  const [webcamButtonDisabled, setWebcamButtonDisabled] = useState(false)\r\n  const [callButtonDisabled, setCallButtonDisabled] = useState(true)\r\n  const [answerButtonDisabled, setAnswerButonDisabled] = useState(true)\r\n  const [hangUpButtonDisabled, setHangUpButtonDisabled] = useState(true)\r\n  const [callID, setCallID] = useState('')\r\n\r\n  // Setup media sources\r\n  const webcamSetup = async () => {\r\n    pc = await new RTCPeerConnection(servers)\r\n    localStream = await navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true,\r\n    })\r\n    remoteStream = new MediaStream()\r\n\r\n    // Push tracks from local stream to peer connection\r\n    localStream.getTracks().forEach((track) => {\r\n      pc.addTrack(track, localStream)\r\n    })\r\n\r\n    // Pull tracks from remote stream, add to video stream\r\n    pc.ontrack = (event) => {\r\n      event.streams[0].getTracks().forEach((track) => {\r\n        remoteStream.addTrack(track)\r\n      })\r\n    }\r\n\r\n    console.log(localStream)\r\n    console.log(remoteStream)\r\n    localVideoRef.current.srcObject = localStream\r\n    remoteVideoRef.current.srcObject = remoteStream\r\n    localVideoRef.current.muted = true\r\n\r\n    setWebcamButtonDisabled(true)\r\n    setCallButtonDisabled(false)\r\n    setAnswerButonDisabled(false)\r\n  }\r\n\r\n  // Create call offer\r\n  const createCall = async () => {\r\n    // Reference Firestore collections for signaling\r\n    const callDoc = firestore.collection('calls').doc()\r\n    console.log(callDoc.id)\r\n    const offerCandidates = callDoc.collection('offerCandidates')\r\n    const answerCandidates = callDoc.collection('answerCandidates')\r\n\r\n    setCallID(callDoc.id)\r\n\r\n    // Get candidates for caller, save to db\r\n    pc.onicecandidate = (event) => {\r\n      event.candidate && offerCandidates.add(event.candidate.toJSON())\r\n    }\r\n\r\n    // Create offer\r\n    const offerDescription = await pc.createOffer()\r\n    await pc.setLocalDescription(offerDescription)\r\n\r\n    const offer = {\r\n      sdp: offerDescription.sdp,\r\n      type: offerDescription.type,\r\n    }\r\n\r\n    await callDoc.set({ offer })\r\n\r\n    // Listen for remote answer\r\n    callDoc.onSnapshot((snapshot) => {\r\n      const data = snapshot.data()\r\n      if (!pc.currentRemoteDescription && data?.answer) {\r\n        // \"?.\" optional chaining\r\n        const answerDescription = new RTCSessionDescription(data.answer)\r\n        pc.setRemoteDescription(answerDescription)\r\n      }\r\n    })\r\n\r\n    // When answered, add candidate to peer connection (remote stream)\r\n    answerCandidates.onSnapshot((snapshot) => {\r\n      snapshot.docChanges().forEach((change) => {\r\n        if (change.type === 'added') {\r\n          const candidate = new RTCIceCandidate(change.doc.data())\r\n          pc.addIceCandidate(candidate)\r\n        }\r\n      })\r\n    })\r\n\r\n    setHangUpButtonDisabled(false)\r\n    setCallButtonDisabled(true)\r\n    setAnswerButonDisabled(true)\r\n  }\r\n\r\n  // Answer the call with the unique ID\r\n  const answerCall = async () => {\r\n    const callDoc = firestore.collection('calls').doc(callID)\r\n    const result = await callDoc.get()\r\n    if (!result.exists) {\r\n      console.log('document does not exist!')\r\n      alert('Invalid call ID! Please try again.')\r\n      return\r\n    }\r\n\r\n    console.log('why does it keep going')\r\n    const answerCandidates = callDoc.collection('answerCandidates')\r\n    const offerCandidates = callDoc.collection('offerCandidates')\r\n\r\n    pc.onicecandidate = (event) => {\r\n      event.candidate && answerCandidates.add(event.candidate.toJSON())\r\n    }\r\n\r\n    const callData = (await callDoc.get()).data()\r\n\r\n    const offerDescription = callData.offer\r\n    await pc.setRemoteDescription(new RTCSessionDescription(offerDescription))\r\n\r\n    const answerDescription = await pc.createAnswer()\r\n    await pc.setLocalDescription(answerDescription)\r\n\r\n    const answer = {\r\n      type: answerDescription.type,\r\n      sdp: answerDescription.sdp,\r\n    }\r\n\r\n    await callDoc.update({ answer })\r\n\r\n    // add caller to the peer connection (remote stream)\r\n    offerCandidates.onSnapshot((snapshot) => {\r\n      snapshot.docChanges().forEach((change) => {\r\n        console.log(change)\r\n        if (change.type === 'added') {\r\n          let data = change.doc.data()\r\n          pc.addIceCandidate(new RTCIceCandidate(data))\r\n        }\r\n      })\r\n    })\r\n\r\n    setHangUpButtonDisabled(false)\r\n    setCallButtonDisabled(true)\r\n    setAnswerButonDisabled(true)\r\n  }\r\n\r\n  const hangUp = () => {\r\n    localStream.getTracks().forEach((track) => {\r\n      track.stop()\r\n    })\r\n    remoteStream.getTracks().forEach((track) => {\r\n      track.stop()\r\n    })\r\n    pc.close()\r\n    pc = null\r\n\r\n    localVideoRef.current.srcObject = null\r\n    remoteVideoRef.current.srcObject = null\r\n\r\n    // deleteCallDoc(callID);\r\n    setCallID('')\r\n\r\n    console.log('call ended')\r\n\r\n    setHangUpButtonDisabled(true)\r\n    setWebcamButtonDisabled(false)\r\n  }\r\n\r\n  // const deleteCallDoc = (id) => {\r\n  // \tFirebase.firestore().collection('calls').doc(id).delete().then(function() {\r\n  // \t\tconsole.log('Document successfully deleted!');\r\n  // \t}).catch(function(error) {\r\n  // \t\tconsole.error('Error removing document: ', error);\r\n  // \t});\r\n  // }\r\n  let mic_switch = true\r\n  let video_switch = true\r\n\r\n  function toggleVideo() {\r\n    if (localStream != null && localStream.getVideoTracks().length > 0) {\r\n      video_switch = !video_switch\r\n\r\n      localStream.getVideoTracks()[0].enabled = video_switch\r\n    }\r\n  }\r\n\r\n  function toggleMic() {\r\n    if (localStream != null && localStream.getTracks().length > 0) {\r\n      mic_switch = !mic_switch\r\n\r\n      localStream.getAudioTracks()[0].enabled = mic_switch\r\n    }\r\n    localStream.getTracks().forEach((t) => {\r\n      if (t.kind === 'audio') t.enabled = !t.enabled\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"videos\">\r\n        <span id=\"local-stream\">\r\n          <h3>Local Stream</h3>\r\n          <video\r\n            id=\"webcamVideo\"\r\n            ref={localVideoRef}\r\n            autoPlay\r\n            playsInline\r\n          ></video>\r\n        </span>\r\n        <span className=\"remote-stream\">\r\n          <h3>Remote Stream</h3>\r\n          <video\r\n            id=\"remoteVideo\"\r\n            ref={remoteVideoRef}\r\n            autoPlay\r\n            playsInline\r\n          ></video>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        <div>\r\n          <Button\r\n            id=\"webcamButton\"\r\n            disabled={webcamButtonDisabled}\r\n            onClick={webcamSetup}\r\n          >\r\n            Start webcam\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <Button\r\n              id=\"callButton\"\r\n              disabled={callButtonDisabled}\r\n              onClick={createCall}\r\n            >\r\n              Create Call\r\n            </Button>\r\n          </span>\r\n          <span>\r\n            <Button disabled={hangUpButtonDisabled} onClick={toggleMic}>\r\n              Mute Audio\r\n            </Button>\r\n          </span>\r\n          <span>\r\n            <Button disabled={hangUpButtonDisabled} onClick={toggleVideo}>\r\n              Mute Video\r\n            </Button>\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Input\r\n            id=\"callInput\"\r\n            placeholder=\"Enter Unique ID\"\r\n            value={callID}\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(callID.textToCopy)\r\n            }}\r\n            onChange={(e) => setCallID(e.target.value)}\r\n          />\r\n          <Button\r\n            id=\"answerButton\"\r\n            disabled={answerButtonDisabled}\r\n            onClick={answerCall}\r\n          >\r\n            Answer\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <Button\r\n              id=\"hangupButton\"\r\n              disabled={hangUpButtonDisabled}\r\n              onClick={hangUp}\r\n              icon={'phone'}\r\n            >\r\n              Hangup\r\n            </Button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoChat\r\n","import { SET_USER, CLEAR_USER } from './actionTypes'\n\nconst initialUserState = {\n  isLoading: true,\n  currentUser: null,\n}\n\nexport const userReducer = (state = initialUserState, { type, payload }) => {\n  switch (type) {\n    case SET_USER:\n      return {\n        isLoading: false,\n        currentUser: payload,\n      }\n    case CLEAR_USER:\n      return {\n        ...initialUserState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n","import { SET_CHANNEL, SET_PRIVATE_CHANNEL, SET_USER_POSTS } from './actionTypes'\n\nconst initialState = {\n  currentChannel: null,\n  private: false,\n  userPosts: null,\n}\n\nexport const channelReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_CHANNEL:\n      return { ...state, currentChannel: payload }\n    case SET_PRIVATE_CHANNEL:\n      return { ...state, private: payload.isChannelPrivate }\n    case SET_USER_POSTS:\n      return { ...state, userPosts: payload }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { userReducer } from './auth/reducers'\nimport { channelReducer } from './channels/reducers'\n\nexport default combineReducers({\n  user: userReducer,\n  channel: channelReducer,\n})\n","export const SET_USER = 'SET/USER'\nexport const CLEAR_USER = 'CLEAR/USER'\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducer from './roorReducer'\n\nexport default createStore(reducer, composeWithDevTools())\n","import React from 'react'\r\n// import { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nimport './Auth.styles.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../../firebase'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nfunction ForgetPassword() {\r\n  const initialState = {\r\n    email: '',\r\n  }\r\n\r\n  const [loginUserState, setRegisterUserState] = React.useState(initialState)\r\n  const [successMessage, setSuccessMessage] = React.useState('')\r\n  const [errors, setErrors] = React.useState([])\r\n  const [status, setStatus] = React.useState('')\r\n\r\n  const handleChange = (event) => {\r\n    setRegisterUserState({\r\n      ...loginUserState,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    const errors = []\r\n    if (formIsValid(loginUserState)) {\r\n      const { email } = loginUserState\r\n      setErrors(errors)\r\n      setStatus('PENDING')\r\n\r\n      try {\r\n        await firebase.auth().sendPasswordResetEmail(email)\r\n        setSuccessMessage('Please check your inbox')\r\n        setStatus('RESOLVED')\r\n      } catch (err) {\r\n        setStatus('RESOLVED')\r\n        setErrors(errors.concat({ message: err.message }))\r\n      }\r\n    } else {\r\n      let error = { message: 'Please fill the form' }\r\n      setErrors(errors.concat(error))\r\n    }\r\n\r\n    setRegisterUserState(initialState)\r\n  }\r\n\r\n  const formIsValid = ({ email }) => {\r\n    return email\r\n  }\r\n\r\n  const handleInputError = (errors, inputName) => {\r\n    return errors.some((err) =>\r\n      err.message.toLowerCase().includes(inputName.toLowerCase())\r\n    )\r\n      ? 'error'\r\n      : ''\r\n  }\r\n\r\n  const { email } = loginUserState\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"login\" style={{ marginTop: -70 }}>\r\n          <h2>\r\n            <Icon name=\"unlock\" /> Reset Password\r\n          </h2>\r\n\r\n          <form size=\"large\" onSubmit={onSubmit}>\r\n            <label\r\n              style={{\r\n                color: errors.includes('email') ? '#d72323' : 'white',\r\n              }}\r\n            >\r\n              EMAIL\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n              className={handleInputError(errors, 'email')}\r\n            />\r\n\r\n            <button\r\n              disabled={status === 'PENDING'}\r\n              className={status === 'PENDING' ? 'loading' : ''}\r\n              type=\"submit\"\r\n            >\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <h4>\r\n            <Link to=\"/login\">Return to Login? </Link>\r\n          </h4>\r\n          {successMessage && (\r\n            <p className=\"error\" style={{ color: 'green' }}>\r\n              {successMessage}\r\n            </p>\r\n          )}\r\n          {errors.length > 0 &&\r\n            errors.map((err, i) => (\r\n              <div className=\"error\"  key={i}>\r\n                <p>{err.message}</p>\r\n              </div>\r\n            ))}\r\n          <div>\r\n            <Link to=\"/register\" style={{ fontSize: '1.2rem' }}>\r\n              New Here? Register\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword\r\n","import React, { useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport Login from './components/Auth/Login'\r\nimport Register from './components/Auth/Register'\r\nimport Spinner from './components/Spinner'\r\nimport firebase from './firebase'\r\nimport store from './store'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  withRouter,\r\n} from 'react-router-dom'\r\nimport { Provider, useDispatch, useSelector } from 'react-redux'\r\nimport { setUser, clearUser } from './store/auth/actions'\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport VideoChat from './components/VideoChat'\r\n// import Auth from './components/Auth/Auth'\r\nimport ForgetPassword from './components/Auth/ForgetPassword'\r\n// import { VoiceChat } from '@material-ui/icons'\r\n\r\nconst Root = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector((state) => state.user.isLoading)\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(setUser(user))\r\n        // history.push('/')\r\n      } else {\r\n        history.replace('/login')\r\n        dispatch(clearUser())\r\n      }\r\n    })\r\n  }, [history, dispatch])\r\n\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Route path=\"/forget-password\" component={ForgetPassword} />\r\n      <Route exact path=\"/video\" component={VideoChat} />\r\n      {/* <Route exact path=\"/audio\" component={VoiceChat}/> */}\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst RootWithRouter = withRouter(Root)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <RootWithRouter />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","import { SET_USER, CLEAR_USER } from './actionTypes'\n\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user,\n})\n\nexport const clearUser = () => ({\n  type: CLEAR_USER,\n})\n"],"sourceRoot":""}